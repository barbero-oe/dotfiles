#!/bin/sh
install_if_missing() {
  local package="$1"
  local command_name="${2:-$package}"
  if ! type "$command_name" &> /dev/null ; then
    brew install "$package"
  fi
}

# ZSH Plugin Manager
if [ ! -e "$(brew --prefix antidote)/share/antidote/antidote.zsh" ]; then
  install_if_missing antidote
fi
source "$(brew --prefix antidote)/share/antidote/antidote.zsh"
zstyle ':antidote:bundle' use-friendly-names 'yes'
# loads .zsh_plugins.txt
antidote load

# Loads completions
autoload -U compinit && compinit

# Sets autocompletions history between all instances
HISTSIZE=5000
HISTFILE=~/.zsh_history
SAVEHIST="$HISTSIZE"
# Removes duplicates
HISTDUP=erase
setopt appendhistory
setopt sharehistory
setopt hist_ignore_space
setopt hist_ignore_all_dups
setopt hist_save_no_dups
setopt hist_ignore_dups
setopt hist_find_no_dups

# The plugin will auto execute this zvm_after_lazy_keybindings function
bindkey -v
bindkey '^ ' autosuggest-accept
bindkey '^p' history-search-backward
bindkey '^n' history-search-forward

install_if_missing fzf
# Delays initialization until vi mode is initialized
zvm_after_init_commands+=('source <(fzf --zsh)')

# Install Z command (keep last)
install_if_missing zoxide
eval "$(zoxide init zsh)"

install_if_missing nvim
export EDITOR=nvim
export VISUAL=nvim

install_if_missing tmux

install_if_missing asdf
source "$(brew --prefix asdf)/libexec/asdf.sh"

install_if_missing tldr
install_if_missing eza
install_if_missing bat
install_if_missing ripgrep rg
install_if_missing fd

install_if_missing starship
eval "$(starship init zsh)"
# install_if_missing "jandedobbeleer/oh-my-posh/oh-my-posh" "oh-my-posh"
# eval "$(oh-my-posh init zsh)"

### Aliases ###
alias vim=nvim
alias vimdiff='nvim -d'

function vman() {
  nvim -c "Man $1" -c "only"
}

alias ls=eza
alias ls='eza --all --classify=auto --icons=auto'
alias l='eza --oneline --all --classify=auto --icons=auto'
alias ll='eza --long --all --classify=auto --icons=auto'
alias tree='eza --tree --classify=auto --icons=auto'

alias j="z"

alias ss="less --ignore-case"
alias ppy="yq --prettyPrint | bat --language yaml"
alias cdr='cd "$(peoject_root)"'
alias rg='rg --smart-case'

cdf() {
    local dir="$(fd --type directory | fzf)"
    [[ -d "$dir" ]] && cd "$dir"
}

# Kubernetes
alias k="kubectl"
alias kd="kubectl get deployments"
alias kdd="kubectl describe deployment"
alias kp="kubectl get pods"
alias kdp="kubectl describe pod"
alias kl="kubectl logs"
alias kj="kubectl get jobs"
alias kdj="kubectl describe job"
alias ks="kubectl get services"
alias kds="kubectl describe service"
alias kh="kubectl get hpa"
alias kdh="kubectl describe hpa"
alias kn="kubectl get namespaces"
alias kdn="kubectl describe namespace"
alias ki="kubectl get ingress"
alias kdi="kubectl describe ingress"
alias kpf="kubectl port-forward"

# git
alias st="git status"
alias br='git branch'
alias gps="git push"
alias gpl="git pull"
alias gpf="git fetch"
alias ck="git checkout"
alias ckm="git checkout master"
alias ckn="git checkout main"
alias ckd="git checkout develop"
alias ckr="git checkout release"
alias lg="git lg"
alias lgs="git lg1-specific"
alias gd="git diff"
alias gds="git diff --staged"
alias ga="git add ."
alias gm="git commit -m "

alias nocolor='sed -Ee "s/\x1b\[[0-9;*]*[mGKHF]//g"'
alias noco='sed -Ee "s/\x1b\[[0-9;*]*[mGKHF]//g"'

ckb() {
    git checkout $(git branch | fzf)
}

export PATH="$PATH:$HOME/.config/sh_functions"
[[ -f "$HOME/.local_env" ]] && source "$HOME/.local_env"
